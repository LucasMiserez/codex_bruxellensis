---
import Layout from "../layouts/Layout.astro";
import romans from "romans";
import type { RootRules } from "../lib/interface";

const title = "Reglement";

const response = await fetch(`${import.meta.env.PUBLIC_BASE_URL}api/rules`)
const Codex_Rules = await response.json() as RootRules;

let articleCounter = 1;
---

<Layout title={title}>
  <h2 class="mb-4 font-bold text-3xl">{title}</h2>
  <div class="space-y-4">
    {
      Codex_Rules.map((rule, ruleIndex) => (
		<>
		{ruleIndex == Codex_Rules.length - 1 && (
			<div role="alert" class="alert flex justify-center">
  				<span>Houd in gedachten dat dit reglement niet absoluut is en slechts een richtlijn geeft teneinde het goede verloop van studentikoze activiteiten te garanderen.</span>
			</div>)}
		</>
        <div class="collapse bg-base-200 collapse-arrow">
          <input type="checkbox" />
          <div class="collapse-title flex justify-between text-xl font-medium ">
            <p class="uppercase">{ruleIndex != Codex_Rules.length - 1 && (<span>{romans.romanize(ruleIndex + 1)}.</span>)} {rule.Title}</p>
			<p>Pagina {rule.Page}</p>
          </div>
          <div class="collapse-content">
            {rule.Art.map((art, artIndex) => (
              <>
                {art.ArtTitle && <h4 class="font-semibold mb-2">{art.ArtTitle}</h4>}
				{ruleIndex != Codex_Rules.length - 1 && (<h3 class="font-bold">Art. {articleCounter}</h3>)}
            
                <p class="whitespace-pre text-wrap">{art.content}</p>
                {artIndex !== rule.Art.length - 1 && (
                  <div class="divider divider-neutral" />
                )}
                <span class="hidden">{articleCounter++}</span>
              </>
            ))}
          </div>
        </div>
      ))
    }
  </div>
</Layout>
